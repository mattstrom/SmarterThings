service:
  name: hub

plugins:
- serverless-plugin-typescript
- serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    ACCESS_URL: '/api/smartapps/installations/2ef7cd8e-86e3-4b81-bb9b-4191a35be098' # Arbitrary
    HOST: 'http://localhost:4567'
    REDIS_HOST: 'redis'
    SMARTTHINGS_TOKEN: '2ef7cd8e-86e3-4b81-bb9b-4191a35be098' # Arbitrary

functions:
  arm:
    handler: src/handler.arm
    events:
      - http:
          path: ${env:ACCESS_URL}/arm
          method: put

  disarm:
    handler: src/handler.disarm
    events:
    - http:
        path: ${env:ACCESS_URL}/disarm
        method: put

  try-disarm:
    handler: src/handler.tryDisarm
    events:
    - http:
        path: ${env:ACCESS_URL}/try-disarm
        method: put

  status:
    handler: src/handler.getStatus
    events:
    - http:
        path: ${env:ACCESS_URL}/status
        method: get

  refresh:
    handler: src/handler.refreshSensorStates
    events:
    - http:
        path: ${env:ACCESS_URL}/refresh
        method: post

custom:
  serverless-offline:
    host: 0.0.0.0
    resourceRoutes: true

resources:
  Resources:
    ProxyResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        PathPart: 'api/smartapps/installations/${env:SMARTTHINGS_TOKEN}/{proxy}'
    YourCloudFormationMethodId:
      Type: AWS::ApiGateway::Method
      Properties:
        ResourceId:
          Ref: ProxyResource
        HttpMethod: ANY
        PathPart: '{proxy}'
        Integration:
          Type: HTTP_PROXY
          Uri: 'https://graph-na04-useast2.api.smartthings.com/api/smartapps/installations/${env:SMARTTHINGS_TOKEN}/{proxy}'
